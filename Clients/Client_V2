#include "SoftwareSerial.h"
#include "DFRobotDFPlayerMini.h"
#include <ESP8266HTTPClient.h>
#include <ESP8266WiFiMulti.h>

ESP8266WiFiMulti WiFiMulti;
SoftwareSerial mySoftwareSerial(1, 3); // RX, TX
DFRobotDFPlayerMini myDFPlayer;

const char* ssid = "Hidden Network";
const char* password = "Project GooseHonk";

const char* client_s = "http://192.168.4.1/client";

unsigned long MILLIS, startAudio;
String data;


void setup() {
  WiFi.begin(ssid, password);

  mySoftwareSerial.begin(9600);
  myDFPlayer.begin(mySoftwareSerial);

  myDFPlayer.volume(30);
}

void loop() {
  if (millis() == startAudio){
    myDFPlayer.play(1);

    for (byte j = 0;j <= 5;j++){
      for (byte i = 30;i >= 1;i--){
        myDFPlayer.volume(i);
        delay(j*100);
      }
      for (byte i = 1;i <= 30;i++){
        myDFPlayer.volume(i);
        delay(j*100);
      }
  }
  }
  
  wifiConnect();
}

void wifiConnect(){
  if (millis()-MILLIS >= 1000){
    MILLIS = millis();
    if ((WiFiMulti.run() == WL_CONNECTED)){
      data = httpGETRequest(client_s);
      startAudio = millis()+stringToUL(data);
    }
    else {
      ESP.restart();
    }
  }
}

String httpGETRequest(const char* serverName) {
  WiFiClient client;
  HTTPClient http;
    
  http.begin(client, serverName);
  
  int httpResponseCode = http.GET();
  
  String payload = "--"; 
  
  if (httpResponseCode>0) {
    payload = http.getString();
  }

  http.end();

  return payload;
}

unsigned long stringToUL(String string){
  unsigned long output;

  for (byte i = 0;i <= string.length()-1;i++){
    output += (string[i]-48)*(pow(10,string.length()-i)/10);
  }

  return output;
}
